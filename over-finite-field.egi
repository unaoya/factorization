(load-file "fp-operation.egi")
(load-file "sff.egi")
(load-file "ddf.egi")
(load-file "cantor-zassenhaus.egi")
(define $p 3)

(define $factor
  (lambda $f
    (map (lambda $s
       [(map (lambda $t
              (Cantor-Zassenhaus (fst t) (+ x 1) x (snd t)))
            (fst s)) (snd s)])
         (map (lambda $t (match (fst t) math-expr
                  {[,1 []]
                   [_ [(DDF (fst t) x) (snd t)]]})) (SFFp f x)))))
;why can't use $ instead of lambda

(define $t1 [1 3])
(define $t2 [x 2])
(match (fst t1) math-expr
  {[(eq? $ ,1) []]
   [_ t1]})
(match (fst t2) math-expr
  {[,1 []]
   [_ t2]})

;example
(define $f (+ (** x 2) (* x -3) 2))
(SFFp f x)
;{[(+ 2 x^2) 1]}
(map (lambda $t (match (fst t) math-expr
                  {[,1 []]
                   [_ [(DDF (fst t) x) (snd t)]]})) (SFFp f x))
;{[{[(+ 2 x^2) 1]} 1]}
;(map (DDF (fst $) x) sff-f)
(factor f)
;{{{(+ 1 x) (+ 2 x) 1}}}
;(Cantor-Zassenhaus f (+ x 1) x 1)

(define $g (+ (** x 4) (* (** x 3) 2) (* (** x 2) -3) (* x -4) 1))
(SFFp g x)
;{[(+ 2 x) 4] [1 3] [1 2] [1 1]}
(map (lambda $t (match (fst t) math-expr
                  {[,1 []]
                   [_ [(DDF (fst t) x) (snd t)]]})) (SFFp g x))

(factor g)
;{{{1 (+ 2 x) 1}} {{1 1 1}} {{1 1 1}} {{1 1 1}}}
;(DDF g x)
;{[(+ 2 x) 1] [(+ 2 x) 2] [(+ 2 x) 3] [(+ 2 x) 4]}
;(Cantor-Zassenhaus f (+ x 1) x 4)

(define $h (* (** x 2) (+ x 1)))
h
(factor h)

(define $h2 (* (+ (** x 2) 1) (** x 2)))
h2
(factor h2)

(define $h3 (+ (** x 7) (* 2 (** x 5)) (** x 3) (* x 2)))
h3
(factor h3)

(define $h4 (+ (** x 11) (* 2 (** x 9)) (* 2 (** x 8)) (** x 6) (** x 5) (* 2 (** x 3)) (* 2 (** x 2)) 1))
h4
(factor h4)


;(map (SFFp $ x) (take 10 (map (** (+ x 1) $) nats)))

;{{[(+ 1 x) 1]}
;{[(+ 1 x) 2] [1 1]}
;{[1 1] [(+ 1 x) 3]}
;{[(+ 1 x) 4] [1 3] [1 2] [1 1]}
;{[(+ 1 x) 5] [1 4] [1 3] [1 2] [1 1]}
;{[1 1] [(+ 1 x) 6] [1 3]}
;{[(+ 1 x) 7] [1 6] [1 5] [1 4] [1 3] [1 2] [1 1]}
;{[(+ 1 x) 8] [1 7] [1 6] [1 5] [1 4] [1 3] [1 2] [1 1]}
;{[1 1] [1 3] [(+ 1 x) 9]}
;{[(+ 1 x) 10] [1 9] [1 8] [1 7] [1 6] [1 5] [1 4] [1 3] [1 2] [1 1]}}


